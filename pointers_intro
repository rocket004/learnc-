#include <iostream>     //std::cout
#include <string>       //std::string
#include <vector>       //std::vector
#include <algorithm>    //std::sort
#include <array>       //std::array
using namespace std;

void squareByPtr (int *numPtr);

int main() {
    
    int x = 2;
    // to declare a pointer variable named ptr that points to an integer variable named x
    int *ptr = &x; // pointer variable's name is ptr, the * delcares the pointer to an integer value which is denoted by the variable name x
    // data_type *pointer_name; add value if applicable
    
    cout << "the value of x: " << x << endl;                                     // the value variable stores
    cout << "the memory address where the variable is stored : " << &x << endl;  // memory of the variable
    cout << "the memory address where the variable is stored : " << ptr << endl; // refers to the pointer itself
    cout << "in order to print the value pointed by ptr : " << *ptr << endl;     // the value pointer points to
    
    // pointers can be passed as a function argument
    
    int y = 5;
    squareByPtr(&y);
    cout << y << endl;
    
    // imagine points as a tranparent film or block that moves around left and right
    // this forbids changing either the address ptr contains or the value it points to
    const int * const ptr;
    
    // declares a constant pointer to changeable integer data
    int * const ptr;
    
    // declares a changeable pointer to a constant integer
    const int *ptr;
    
    return 0;
}

void squareByPtr (int *numPtr)
{
    *numPtr = *numPtr * *numPtr;
}

