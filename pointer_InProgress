#include <iostream>     //std::cout
#include <string>       //std::string
#include <vector>       //std::vector
#include <algorithm>    //std::sort
#include <array>       //std::array
using namespace std;


int main() {
    
    // Pointer #1
    
    /*
    int box = 5;
    int *ptr = &box;
    int **dPtr = &ptr;
    
    cout << "box holds: " << box << endl;                 // value the box contains
    cout << "box lives at: " << &box << endl;             // the address where box lives
    cout << "pointer points to address: " << ptr << endl; // name of the pointer that you created is called "ptr" here, it points at the memory address where the box lives.
    cout << "the thing that ptr points to has the value: " << *ptr << endl;
    cout << " ptr lives at: " << &ptr << endl;

    // https://www.youtube.com/watch?v=ZMDYsr9scGo
    */
    
    // Pointer #2
    
    // Write a program that asks the user to enter integers as inputs to be stored in the variables 'a' and 'b' respectively. There are also two integer pointers named ptrA and ptrB. Assign the values of 'a' and 'b' to ptrA and ptrB respectively, and display them.
    
    /*
    int a = 2;
    int b = 5;
    int *ptrA = &a;
    int *ptrB = &b;
    
    cout << "the value stored in variable a is: " << a << endl;
    cout << "the value stored in variable b is: " << b << endl;
    cout << "the pointer ptrA points to address: " << ptrA << endl;
    cout << "the pointer ptrB points to address: " << ptrB << endl;
    cout << "the variable a lives at: " << &a << endl;
    cout << "the variable b lives at: " << &b << endl;
    cout << "the thing that pointer ptrA points to has the value: " << *ptrA << endl;
    cout << "the thing that pointer ptrB points to has the value: " << *ptrB << endl;
    cout << "pointer ptrA lives at: " << &ptrA << endl;
    cout << "pointer ptrB lives at: " << &ptrB << endl;
    */
    
    // Pointer #3
    
    // Write a program to find the max of an integral data set. The program will ask the user to input the number of data values in the set and each value. The program prints on screen a pointer that points to the max value.
    
    // user enters the size of the dataset
    int n = 0;
    cout  << "enter the size of the array: " << endl;
    cin >> n;
    
    cout << "enter " << n << " values in this array" << endl;
    // create the array using 'for' loop
    
    int m = 0;
    int array1[n];
    for (m = 0; m < n; m++) {
        cin >>  array1[m];
    }
    
    
    // display the array using 'for' loop
    for (m = 0; m < n; m++) {
        cout << array1[m] << endl;
    }
    
    
    
    // Pointer #4
    
    // Pointer #5
    
    
    return 0;
}


